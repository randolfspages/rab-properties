// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?   
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}


model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  applications  Application[]
  properties    Property[] @relation("PostedProperties")
}


model Property {
  id            String    @id @default(cuid())
  title         String
  owner         String?
  location      String
  type          String    // eg. land, apt, house
  purpose       String    // outright sale, rent, short-stay, swap
  description   String    @db.Text
  size          String?
  price         String?
  
  postedAt      DateTime  @default(now())
  postedBy      User      @relation("PostedProperties", fields:[postedById], references: [id])
  postedById    String

  applications   Application[]
}


model Application {
   id            String    @id @default(cuid())
   propertyId    String     
   userId        String
   Status        String    @default("Reviewing") //eg: pending, reviewing, accepted, rejected
   appliedAt     DateTime  @default(now())

   user          User      @relation(fields:[userId], references: [id])
   property      Property  @relation(fields:[propertyId], references: [id])

   @@unique([propertyId, userId])
}